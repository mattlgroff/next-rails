import { <%= camelCaseSingularModelName %>Metadata as modelMetadata, <%= pascalSingularModelName %>Metadata } from "@/db/models/<%= singularModelName %>";
import Link from "next/link";
import { useRouter } from 'next/router'

const New<%= pascalSingularModelName %>Page = () => {
  const router = useRouter();

  async function onSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    const formData = new FormData(e.currentTarget);
    const data = Object.fromEntries(formData.entries());
    
    const response = await fetch('/api/<%= pluralModelName %>/create', {
      method: 'POST',
      body: JSON.stringify(data),
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (response.ok) {
      router.push('/<%= pluralModelName %>');
    } else {
      const error = await response.json();
      
      alert(`There was a problem creating your <%= pascalSingularModelName %>. ${error.message}`);
    }
  }


  return (
    <main className="container mx-auto mt-28 px-5 flex min-h-screen">
      <div className="mx-auto md:w-2/3 w-full">
        <h1 className="font-bold text-4xl">New <%= pascalSingularModelName %></h1>
      
        <form onSubmit={onSubmit}>
          {
            (Object.keys(modelMetadata) as Array<keyof <%= pascalSingularModelName %>Metadata>).map(key => {
              if (key !== 'id' && key !== 'created_at' && key !== 'updated_at') {
                if (modelMetadata[key].inputType === 'text') {
                  return (
                    <div key={key} className="my-5">
                      <label className="block text-gray-700 font-bold mb-2">{modelMetadata[key].label}</label>
                      <input name={key} type="text" className="block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" />
                    </div>
                  )
                }

                if (modelMetadata[key].inputType === 'textarea') {
                  return (
                    <div key={key} className="my-5">
                      <label className="block text-gray-700 font-bold mb-2">{modelMetadata[key].label}</label>
                      <textarea name={key} rows={4} className="block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" />
                    </div>
                  )
                }

                if (modelMetadata[key].inputType === 'number') {
                  return (
                    <div key={key} className="my-5">
                      <label className="block text-gray-700 font-bold mb-2">{modelMetadata[key].label}</label>
                      <input name={key} type="number" className="block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" />
                    </div>
                  )
                }

                if (modelMetadata[key].inputType === 'email') {
                  return (
                    <div key={key} className="my-5">
                      <label className="block text-gray-700 font-bold mb-2">{modelMetadata[key].label}</label>
                      <input name={key} type="email" className="block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" />
                    </div>
                  )
                }

                if (modelMetadata[key].inputType === 'password') {
                  return (
                    <div key={key} className="my-5">
                      <label className="block text-gray-700 font-bold mb-2">{modelMetadata[key].label}</label>
                      <input name={key} type="password" className="block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" />
                    </div>
                  )
                }

                if (modelMetadata[key].inputType === 'checkbox') {
                  return (
                    <div key={key} className="my-5">
                      <label className="block text-gray-700 font-bold mb-2">{modelMetadata[key].label}</label>
                      <input name={key} type="checkbox" className="h-5 w-5 text-blue-600 rounded border-gray-300 focus:ring-blue-500 focus:border-blue-500" />
                    </div>
                  )
                }

                if (modelMetadata[key].inputType === 'date') {
                  return (
                    <div key={key} className="my-5">
                      <label className="block text-gray-700 font-bold mb-2">{modelMetadata[key].label}</label>
                      <input name={key} type="date" className="block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" />
                    </div>
                  )
                }
              }
            })
          }
          <div className="inline">
            <button type="submit" className="rounded-lg py-3 px-5 bg-blue-600 text-white inline-block font-medium cursor-pointer">Create <%= pascalSingularModelName %></button>
          </div>
        </form>


        <Link href="/<%= pluralModelName %>" className="mt-2 rounded-lg py-3 px-5 bg-gray-100 inline-block font-medium">Back to <%= pascalPluralModelName %></Link>
      </div>
    </main>
  );
};

export default New<%= pascalSingularModelName %>Page;
